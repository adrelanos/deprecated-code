#!/bin/bash

## This file is part of Whonix.
## Copyright (C) 2012 - 2014 Patrick Schleizer <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

###########
## Header #
###########

## - The header is not compulsory and does not have any other kind of high importance.
## - If the SKIP_SCRIPTS variable includes the scripts own filename, the script will
##   exit without running any code. This is useful for debugging purposes.
## - It just enables debugging, so the builder can see each and every command.
## - Enables a trap, which informs about eventual errors and exit 1. Since chroot-scripts
##   are run /home/user/Whonix/build-steps.d/35_run-chroot-scripts-raw using run-parts,
##   any non-zero return values will break the build. This can be useful to catch
##   unexpected issues.
## - run-parts will run all executable files inside the chroot folder in lexical order,
##   which means, 10_root_check will run before 70_skeleton. This is useful to easily
##   (re-)order individual chroot-scripts, in case one chroot-script depends on another
##   chroot-script having finished.
## - There is no strict requirement for chroot-scripts to be bash scripts. In theory,
##   any kind of script or application could be dropped inside the chroot folder.

set -x
set -o pipefail

error_handler() {
   true "\
###########################################################
## chroot script: ERROR detected. Please report this bug! #
###########################################################"

   exit 1
}

## {{ Set up error handler.
if [ "$(type -t errorhandlergeneral)" = "function" ]; then
   ## Function errorhandlergeneral exists (declared in
   ## help-steps/pre). Prefer to use the more feature rich version of the error
   ## handler.
   trap "errorhandlergeneral" ERR
else
   ## Function errorhandlergeneral does not exist. Script
   ## runs standalone outside the build script. Fall back to a simpler error
   ## handler.
   trap "error_handler" ERR
fi
## }}

own_filename="$(basename $BASH_SOURCE)"
for skip_script in $SKIP_SCRIPTS; do
   if [ "$skip_script" = "$own_filename" ]; then
      true "INFO: Skipping $own_filename, because SKIP_SCRIPTS includes it."
      exit 0
   fi
done
unset skip_script

###########
## Script #
###########

## Code...

## Use true for output instead of echo, because we already set -x.
true "Skeleton does nothing."

## More code...

############
## Footer ##
############

## Explicitly "exit 0", so eventually trapped errors can be ignored.
exit 0
